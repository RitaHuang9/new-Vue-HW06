{
  "version": 3,
  "sources": ["../../@vee-validate/i18n/dist/vee-validate-i18n.esm.js"],
  "sourcesContent": ["/**\n  * vee-validate v4.7.4\n  * (c) 2023 Abdelrahman Awad\n  * @license MIT\n  */\nfunction isCallable(fn) {\r\n    return typeof fn === 'function';\r\n}\r\nconst isObject = (obj) => obj !== null && !!obj && typeof obj === 'object' && !Array.isArray(obj);\n\n/**\r\n * Replaces placeholder values in a string with their actual values\r\n */\r\nfunction interpolate(template, values) {\r\n    return template.replace(/(\\d:)?{([^}]+)}/g, function (_, param, placeholder) {\r\n        if (!param || !values.params) {\r\n            return placeholder in values\r\n                ? values[placeholder]\r\n                : values.params && placeholder in values.params\r\n                    ? values.params[placeholder]\r\n                    : `{${placeholder}}`;\r\n        }\r\n        // Handles extended object params format\r\n        if (!Array.isArray(values.params)) {\r\n            return placeholder in values.params ? values.params[placeholder] : `{${placeholder}}`;\r\n        }\r\n        // Extended Params exit in the format of `paramIndex:{paramName}` where the index is optional\r\n        const paramIndex = Number(param.replace(':', ''));\r\n        return paramIndex in values.params ? values.params[paramIndex] : `${param}{${placeholder}}`;\r\n    });\r\n}\r\nfunction merge(target, source) {\r\n    Object.keys(source).forEach(key => {\r\n        if (isObject(source[key])) {\r\n            if (!target[key]) {\r\n                target[key] = {};\r\n            }\r\n            merge(target[key], source[key]);\r\n            return;\r\n        }\r\n        target[key] = source[key];\r\n    });\r\n    return target;\r\n}\n\nclass Dictionary {\r\n    constructor(locale, dictionary) {\r\n        this.container = {};\r\n        this.locale = locale;\r\n        this.merge(dictionary);\r\n    }\r\n    resolve(ctx) {\r\n        return this.format(this.locale, ctx);\r\n    }\r\n    getLocaleDefault(locale, field) {\r\n        var _a, _b, _c, _d, _e;\r\n        return ((_c = (_b = (_a = this.container[locale]) === null || _a === void 0 ? void 0 : _a.fields) === null || _b === void 0 ? void 0 : _b[field]) === null || _c === void 0 ? void 0 : _c._default) || ((_e = (_d = this.container[locale]) === null || _d === void 0 ? void 0 : _d.messages) === null || _e === void 0 ? void 0 : _e._default);\r\n    }\r\n    format(locale, ctx) {\r\n        var _a, _b, _c, _d, _e, _f, _g;\r\n        let message;\r\n        const { rule, form, label, name } = ctx;\r\n        const fieldName = label || ((_b = (_a = this.container[locale]) === null || _a === void 0 ? void 0 : _a.names) === null || _b === void 0 ? void 0 : _b[name]) || name;\r\n        if (!rule) {\r\n            message = this.getLocaleDefault(locale, name) || `${fieldName} is not valid`;\r\n            return isCallable(message) ? message(ctx) : interpolate(message, Object.assign(Object.assign({}, form), { field: fieldName }));\r\n        }\r\n        // find if specific message for that field was specified.\r\n        message = ((_e = (_d = (_c = this.container[locale]) === null || _c === void 0 ? void 0 : _c.fields) === null || _d === void 0 ? void 0 : _d[name]) === null || _e === void 0 ? void 0 : _e[rule.name]) || ((_g = (_f = this.container[locale]) === null || _f === void 0 ? void 0 : _f.messages) === null || _g === void 0 ? void 0 : _g[rule.name]);\r\n        if (!message) {\r\n            message = this.getLocaleDefault(locale, name) || `${fieldName} is not valid`;\r\n        }\r\n        return isCallable(message)\r\n            ? message(ctx)\r\n            : interpolate(message, Object.assign(Object.assign({}, form), { field: fieldName, params: rule.params }));\r\n    }\r\n    merge(dictionary) {\r\n        merge(this.container, dictionary);\r\n    }\r\n}\r\nlet DICTIONARY;\r\nfunction localize(locale, dictionary) {\r\n    if (!DICTIONARY) {\r\n        DICTIONARY = new Dictionary('en', {});\r\n    }\r\n    const generateMessage = ctx => {\r\n        return DICTIONARY.resolve(ctx);\r\n    };\r\n    if (typeof locale === 'string') {\r\n        DICTIONARY.locale = locale;\r\n        if (dictionary) {\r\n            DICTIONARY.merge({ [locale]: dictionary });\r\n        }\r\n        return generateMessage;\r\n    }\r\n    DICTIONARY.merge(locale);\r\n    return generateMessage;\r\n}\r\n/**\r\n * Sets the locale\r\n */\r\nfunction setLocale(locale) {\r\n    DICTIONARY.locale = locale;\r\n}\r\n/**\r\n * Loads a locale file from URL and merges it with the current dictionary\r\n */\r\nasync function loadLocaleFromURL(url) {\r\n    try {\r\n        const locale = await fetch(url, {\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            },\r\n        }).then(res => res.json());\r\n        if (!locale.code) {\r\n            console.error('Could not identify locale, ensure the locale file contains `code` field');\r\n            return;\r\n        }\r\n        localize({ [locale.code]: locale });\r\n    }\r\n    catch (err) {\r\n        console.error(`Failed to load locale `);\r\n    }\r\n}\n\nexport { loadLocaleFromURL, localize, setLocale };\n"],
  "mappings": "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",
  "names": []
}
